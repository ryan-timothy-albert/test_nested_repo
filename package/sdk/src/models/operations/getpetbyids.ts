/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetPetByIDSRequest = {
  /**
   * ID of pet to return
   */
  petId: number;
};

/** @internal */
export const GetPetByIDSRequest$inboundSchema: z.ZodType<
  GetPetByIDSRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  petId: z.number().int(),
});

/** @internal */
export type GetPetByIDSRequest$Outbound = {
  petId: number;
};

/** @internal */
export const GetPetByIDSRequest$outboundSchema: z.ZodType<
  GetPetByIDSRequest$Outbound,
  z.ZodTypeDef,
  GetPetByIDSRequest
> = z.object({
  petId: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPetByIDSRequest$ {
  /** @deprecated use `GetPetByIDSRequest$inboundSchema` instead. */
  export const inboundSchema = GetPetByIDSRequest$inboundSchema;
  /** @deprecated use `GetPetByIDSRequest$outboundSchema` instead. */
  export const outboundSchema = GetPetByIDSRequest$outboundSchema;
  /** @deprecated use `GetPetByIDSRequest$Outbound` instead. */
  export type Outbound = GetPetByIDSRequest$Outbound;
}

export function getPetByIDSRequestToJSON(
  getPetByIDSRequest: GetPetByIDSRequest,
): string {
  return JSON.stringify(
    GetPetByIDSRequest$outboundSchema.parse(getPetByIDSRequest),
  );
}

export function getPetByIDSRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetPetByIDSRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPetByIDSRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPetByIDSRequest' from JSON`,
  );
}
