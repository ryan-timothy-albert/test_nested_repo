/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type DeletePetRequest = {
    apiKey?: string | undefined;
    /**
     * Pet id to delete
     */
    petId: number;
};

/** @internal */
export const DeletePetRequest$inboundSchema: z.ZodType<DeletePetRequest, z.ZodTypeDef, unknown> = z
    .object({
        api_key: z.string().optional(),
        petId: z.number().int(),
    })
    .transform((v) => {
        return remap$(v, {
            api_key: "apiKey",
        });
    });

/** @internal */
export type DeletePetRequest$Outbound = {
    api_key?: string | undefined;
    petId: number;
};

/** @internal */
export const DeletePetRequest$outboundSchema: z.ZodType<
    DeletePetRequest$Outbound,
    z.ZodTypeDef,
    DeletePetRequest
> = z
    .object({
        apiKey: z.string().optional(),
        petId: z.number().int(),
    })
    .transform((v) => {
        return remap$(v, {
            apiKey: "api_key",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeletePetRequest$ {
    /** @deprecated use `DeletePetRequest$inboundSchema` instead. */
    export const inboundSchema = DeletePetRequest$inboundSchema;
    /** @deprecated use `DeletePetRequest$outboundSchema` instead. */
    export const outboundSchema = DeletePetRequest$outboundSchema;
    /** @deprecated use `DeletePetRequest$Outbound` instead. */
    export type Outbound = DeletePetRequest$Outbound;
}
